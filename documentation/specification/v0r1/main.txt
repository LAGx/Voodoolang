

набросок спецификации Voodoolang v0.1

** Типизация **

Voodoo имеет статическую, строгую типизацию.

** Препроцессорные шаблоны **


struct Pearson<T>{
  String name;
  T age;
}

SOME_TYPE_NAME hello<SOME_TYPE_NAME>(SOME_TYPE_NAME) {
   return (SOME_TYPE_NAME) 78;
}



hello<int>(45);


такие декларации валидируются и сохраняются в памяти кодом.
Когда вызывается шаблонная функция или строится шаблонная структура,
имя типа просто подставляется в декларацию и компилируется в общую среду.


 ** Создание переменных, области видимости, сборщик мусора. **

 переменные ссылочного типа, но они никогда не могут быть null. Переменная всегда содержит в себе объект.

 для копирования нужно использовать
 системную функцию copy (&);

 Int a = 5;
 Int b = a;
 - а и b ссылаются на 5

 Int a = 5;
 Int b = &a;

- произошло копирование 5



 ** структуры языка**

*общие концепции синтаксиса*
 *переменные*
 *struct*
 *function*
 *namespace*



 ** модификаторы типов **

*const"

 ** Идиомы **

* псевдо ооп *

с помощью namespace и земли в начале названий для обозначения приватных переменных.

namespace Pearson{

    struct Data{
        String name;
        Int age;
    }

    Data crate() {
        return Data();
    }

    void increaseAge(Data& data) {
        data.age++;
    }

};


auto kekich = Pearson::create();
Pearson::increaseAge(kekich) ;
